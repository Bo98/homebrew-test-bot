name: GitHub Actions CI
on:
  push:
    branches: master
  pull_request: []
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - name: Set up Git repository
      uses: actions/checkout@master

    - name: Set up Ruby
      if: matrix.os == 'ubuntu-latest'
      uses: actions/setup-ruby@master
      with:
        ruby-version: '2.6'

    - name: Set up Homebrew
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@master

    - name: Cache Homebrew Bundler RubyGems
      id: cache
      uses: actions/cache@master
      with:
        path: ${{ steps.set-up-homebrew.outputs.gems-path }}
        key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
        restore-keys: ${{ runner.os }}-rubygems-

    - name: Install Homebrew Bundler RubyGems
      if: steps.cache.outputs.cache-hit != 'true'
      run: brew install-bundler-gems

    - name: Run brew style
      run: brew style homebrew/test-bot

    - name: Install Bundler
      run: gem install bundler -v "~>1"

    - name: Cache Homebrew/homebrew-test-bot RubyGems
      id: cache-test-bot
      uses: actions/cache@master
      with:
        path: vendor/ruby
        key: ${{ runner.os }}-rubygems-test-bot-${{ hashFiles('Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-rubygems-test-bot

    - name: Install Homebrew/homebrew-test-bot RubyGems
      if: steps.cache-test-bot.outputs.cache-hit != 'true'
      run: bundle install --jobs 4 --retry 3

    - name: Run Homebrew/homebrew-test-bot RSpec tests
      run: bundle exec rspec

    - name: Build Docker image
      if: matrix.os == 'ubuntu-latest'
      run: docker build -t brew .

    - name: Run brew test-bot --test-default-formula
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          docker run \
            -e GITHUB_ACTIONS -e GITHUB_BASE_REF -e GITHUB_REF -e GITHUB_REPOSITORY -e GITHUB_SHA \
            --rm brew \
            brew test-bot --test-default-formula
        else
          brew test-bot --test-default-formula
        fi

    - name: Output brew test-bot failures
      if: matrix.os == 'macOS-latest'
      run: |
        cat steps_output.txt
        rm steps_output.txt

    - name: Run brew test-bot --ci-upload --dry-run
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          docker run \
            -e GITHUB_ACTIONS -e GITHUB_BASE_REF -e GITHUB_REF -e GITHUB_REPOSITORY -e GITHUB_SHA \
            --rm brew \
            brew test-bot --ci-upload --dry-run
        else
          brew test-bot --ci-upload --dry-run
        fi

    - name: Run brew test-bot --only-setup --dry-run
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          docker run \
            -e GITHUB_ACTIONS -e GITHUB_BASE_REF -e GITHUB_REF -e GITHUB_REPOSITORY -e GITHUB_SHA \
            --rm brew \
            brew test-bot --only-setup --dry-run
        else
          brew test-bot --only-setup --dry-run
        fi

    - name: Run brew test-bot testbottest --dry-run
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          docker run \
            -e GITHUB_ACTIONS -e GITHUB_BASE_REF -e GITHUB_REF -e GITHUB_REPOSITORY -e GITHUB_SHA \
            --rm brew \
            brew test-bot testbottest --dry-run
        else
          brew test-bot testbottest --dry-run
        fi
